name: Deploy Images to GHCR

on:
  pull_request:
    branches:
    - main
    paths-ignore:
    - '.github/**'
    - .dockerignore
    - .gitignore
    - .goreleaser.yaml
    - GitVersion.yml
    - LICENSE
    - README.md

permissions:
  id-token: write

jobs:
  push-nightly-docker-image:
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: "Login to GitHub Container Registry"
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}
      
      - name: Set env
        run: |
          echo "SHORT_SHA=${GITHUB_SHA::8}" >> $GITHUB_ENV

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          file: ./tests/Dockerfile
          tags: ghcr.io/shiftavenue/azure-clientid-syncer:${{ env.SHORT_SHA }}


  e2e-test-provisioning:
    needs: [push-nightly-docker-image]
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout GitHub Action"
        uses: actions/checkout@main
      
      - name: Azure login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      
      - name: Create random suffix
        run: |
          RAND=$(tr -dc a-z </dev/urandom | head -c 4 && echo)
          echo "RAND=${RAND}" >> .env

      - name: Upload env file
        uses: actions/upload-artifact@v4
        with:
          name: env
          path: .env

      - name: Provisioning infrastructure
        run: ./tests/provision-infrastructure.sh "${GITHUB_SHA::8}" "${{ secrets.AZURE_CLIENT_ID }}"
      
      - name: Upload env file
        uses: actions/upload-artifact@v4
        with:
          name: env
          path: .env
          overwrite: true

  e2e-test-azure-service-account:
    needs: [e2e-test-provisioning]
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout GitHub Action"
        uses: actions/checkout@main

      - name: Azure login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Download env file
        uses: actions/download-artifact@v4
        with:
          name: env

      - name: Provisioning infrastructure
        run: ./tests/test-azure-service-account.sh

  e2e-test-cleanup:
    if: |
      always() && needs.push-nightly-docker-image.result == 'success'
    needs: [e2e-test-azure-service-account, e2e-test-provisioning, push-nightly-docker-image]
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout GitHub Action"
        uses: actions/checkout@main

      - name: Azure login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Download math result for job 1
        uses: actions/download-artifact@v4
        with:
          name: env

      - name: Provisioning infrastructure
        run: ./tests/cleanup-infrastructure.sh